---
sudo: required

env:
  - distribution: centos
    version: 7
    ansible_version: 2.4.6
    foreman_version: 1.18
    scenario: foreman
  - distribution: centos
    version: 7
    ansible_version: 2.5.6
    foreman_version: 1.18
    scenario: foreman
  - distribution: centos
    version: 7
    ansible_version: latest
    foreman_version: 1.18
    scenario: foreman
 # TODO
 # - distribution: centos
 #   version: 7
 #   ansible_version: latest
 #   foreman_version: 1.18
 #   katello_version: 3.6
 #   scenario: katello

services:
  - docker

before_install:
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --no-cache --rm --build-arg ansible_version=${ansible_version} --build-arg foreman_version=${foreman_version} --build-arg katello_version=${katello_version} --file=travis/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible travis'

script:
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/sean797.foreman_installer:ro --hostname ${scenario}.example.com -p 443:443/tcp ${distribution}-${version}:ansible > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" ansible-lint /sean797.foreman_installer'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v --extra-vars "foreman_installer_scenario=${scenario}" /sean797.foreman_installer/travis/${scenario}.yml'
  - >
    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v --extra-vars "foreman_installer_scenario=${scenario}" /sean797.foreman_installer/travis/${scenario}.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - |
    status=$(curl -s -o /dev/null -w "%{http_code}" -H "Accept:application/json,version=2" -H "Content-Type:application/json" -u admin:changeme -k https://$(hostname -f)/api)
    [ $status -eq 200 ] || (echo "API FAILED, got $status" && exit 1)
  - 'sudo docker rm -f "$(cat ${container_id})"'

notifications:
  email: false
